# Функция map
# Функция map() применяет указанную функцию к каждому элементу итерируемого объекта 
# и возвращает итератор с новыми объектами.
# Нельзя пройтись дважды
# f(x) => x + 10
# map(f, [1,2,3,4,5]) => [11,12,13,14,15]

# select 
def select(f, lst):
    return [f(x) for x in lst]
# *----------------------------------------------*
lst = [i for i in range(1, 7)]

lst = map(lambda x: (x, x**2), lst)

print(lst) # <map object at 0x0000023AC5A07610>
print(type(lst)) # <class 'map'>

print(list(lst)) # [(1, 1), (2, 4), (3, 9), (4, 16), (5, 25), (6, 36)]
print(type(list(lst))) # <class 'list'>
# *----------------------------------------------*
data = map(int,'1 2 3 4 5'.split())

# Результат работы map, это некий итератор по которому повторно пройтись нельзя.
# Для повторной работы с результатом map, нужно этот результат сохранить в другой тип данных (list)
for i in data:
    print(i, end = '') # 12345 но второй раз пройтись не получится
    
print(list(data)) # []
    
# После получения результата от map, нужно сразу сохранить

data = list(map(int,'1 2 3 4 5'.split()))

print(data) # [1, 2, 3, 4, 5]
print(data) # [1, 2, 3, 4, 5]
# *----------------------------------------------*